language: php
dist: xenial

php:
  - '7.4'

env:
  global:
    - DISPLAY=:99.0
    - BROWSER_NAME="htmlunit"
    - SELENIUM_SERVER="https://selenium-release.storage.googleapis.com/3.14/selenium-server-standalone-3.14.0.jar" # Latest version including HtmlUnit

services:
  - xvfb

matrix:
  include:
    - name: 'Sauce Labs, Chrome, W3C protocol'
      php: '7.4'
      env: SAUCELABS=1 BROWSER_NAME="chrome" VERSION="84.0" PLATFORM="Windows 10"
      before_script:
        - dig saucelabs.com
        - dig maki86100.miso.saucelabs.com
        - mkdir -p ~/logs
        - php -S 127.0.0.1:8000 -t tests/functional/web/ &>>~/logs/php-server.log &
        - until $(echo | nc localhost 8000); do sleep 1; echo waiting for PHP server on port 8000...; done; echo "PHP server started"
        - mkdir sc; wget -q -t 3 https://saucelabs.com/downloads/sc-4.6.1-linux.tar.gz; tar xzf sc-4.6.1-linux.tar.gz
        - ./sc-4.6.1-linux/bin/sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY --tunnel-identifier $TRAVIS_JOB_NUMBER --logfile ~/logs/sc.log &
        - sleep 20
      addons:
#        sauce_connect: true
        jwt:
          secure: 5s8iQfH1dHgEm0DeP9VZ/MCzCeiE/HnMWqPFzRmg6VD2qJ53oYdseo8j+QCbE25MIwoSnIbKzlnbCN6fVzZc/0S7Mo45xJiq8xVLPSdMjDoOeqYE4of+t5Srq4iSzGLPCLiMTtB4xDEl6blUVGhYxN5rA/tVN+cVtLNQvo3ovRon3Mw3MqR4pgCE6PofcLXtyJc3KuOBlUJLWdPGRdlZrpKWE5ogyj4a1h4bVwidckZqkOF+gm58Gf0zVfFazDQFIw2Xuq7SZmiNgdOD5yUEePkrMhy2tbOlPNAIgHCpzHldv5Y+GYyxIYHZ0mGlGxHrfjrcAoSA6r2iXB9q2ijLVwqOARpcvGcBzZBil9aMAHRIXHAOV9Ihv4velrzmiLKADtD60Bfj2zzntGYZA3EGucitMMkkP7vfAa769i5QWK1Lniq3+VUuGNVjRzl4GuQPpc0wMWeJvQGc5Uf9Kk/sOCkPp0SPWcZ6nNAUebRy3V5OoADA9IntyXxfTlZdOHSbJTsG+eOGve0uLGRAOS+oeCstO7Gk4e/Ylozju+ixkINEY7HHDGt6AyHGtjPdy08Y0XrIqs0JMxsHKrtTVNxDjIFKbMees+vtxU3DEr/tNo1sTo34ieGKZP2Cp5mG/IrcjD1saebUaCngQO3QfeuKcU8pBTR7l7PtFNHm3HrmdkY=

cache:
  directories:
    - $HOME/.composer/cache

install:
  - travis_retry composer self-update
  - travis_retry composer update --no-interaction $DEPENDENCIES

before_script:
  - mkdir -p ~/logs
  - if [ "$BROWSER_NAME" = "chrome" ]; then
      mkdir chromedriver;
      CHROME_VERSION=$(google-chrome --product-version);
      CHROME_VERSION=${CHROME_VERSION%.*};
      wget -q -t 3 https://chromedriver.storage.googleapis.com/$(curl -L https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION})/chromedriver_linux64.zip;
      unzip chromedriver_linux64.zip -d chromedriver;
    fi
  - if [ "$BROWSER_NAME" = "chrome" ]; then export CHROMEDRIVER_PATH=$PWD/chromedriver/chromedriver; fi
  - if [ "$GECKODRIVER" = "1" ]; then mkdir -p geckodriver; wget -q -t 3 https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz; tar xzf geckodriver-v0.26.0-linux64.tar.gz -C geckodriver; fi
  - if [ ! -f jar/selenium-server-standalone.jar ] && [ -n "$SELENIUM_SERVER" ]; then
      mkdir -p jar;
      if [ "$SELENIUM_SERVER" = "legacy" ]; then
        wget -q -t 3 -O jar/selenium-server-standalone.jar https://selenium-release.storage.googleapis.com/3.8/selenium-server-standalone-3.8.1.jar;
      else
        wget -q -t 3 -O jar/selenium-server-standalone.jar $SELENIUM_SERVER;
      fi
    fi
  - if [ "$GECKODRIVER" = "1" ]; then
      geckodriver/geckodriver &> ./logs/geckodriver.log &
    elif [ "$CHROMEDRIVER" = "1" ]; then
      chromedriver/chromedriver --port=4444 --url-base=/wd/hub &> ./logs/chromedriver.log &
    elif [ "$SELENIUM_SERVER" = "legacy" ]; then
      java -Dwebdriver.firefox.marionette=false -Dwebdriver.chrome.driver="$PWD/chromedriver/chromedriver" -jar jar/selenium-server-standalone.jar -enablePassThrough false -log ./logs/selenium.log &
    else
      java -Dwebdriver.chrome.driver="$PWD/chromedriver/chromedriver" -Dwebdriver.gecko.driver="$PWD/geckodriver/geckodriver" -jar jar/selenium-server-standalone.jar -log ./logs/selenium.log &
    fi
  - until $(echo | nc localhost 4444); do sleep 1; echo Waiting for Selenium server on port 4444...; done; echo "Selenium server started"
  - php -S 127.0.0.1:8000 -t tests/functional/web/ &>>./logs/php-server.log &
  - until $(echo | nc localhost 8000); do sleep 1; echo waiting for PHP server on port 8000...; done; echo "PHP server started"

script:
  - if [ -n "$SAUCELABS" ]; then EXCLUDE_GROUP+="exclude-saucelabs,"; fi
  - if [ "$BROWSER_NAME" = "MicrosoftEdge" ]; then EXCLUDE_GROUP+="exclude-edge,"; fi
  - if [ "$BROWSER_NAME" = "firefox" ]; then EXCLUDE_GROUP+="exclude-firefox,"; fi
  - if [ "$BROWSER_NAME" = "chrome" ]; then EXCLUDE_GROUP+="exclude-chrome,"; fi
  - if [ -n "$EXCLUDE_GROUP" ]; then EXTRA_PARAMS+=" --exclude-group $EXCLUDE_GROUP"; fi
  - ./vendor/bin/phpunit --filter testShouldFindElementIfExistsOnAPage --coverage-clover ./logs/coverage-clover.xml $EXTRA_PARAMS

after_script:
  - cd ~
  - if [ -f ./logs/sc.log ]; then cat ./logs/sc.log; fi
  - if [ -f ./logs/selenium.log ]; then cat ./logs/selenium.log; fi
  - if [ -f ./logs/php-server.log ]; then cat ./logs/php-server.log; fi
  - if [ -f sauce-connect.log ]; then cat sauce-connect.log; fi
  - if [ -f ./logs/geckodriver.log ]; then cat ./logs/geckodriver.log; fi
  - if [ -f ./logs/chromedriver.log ]; then cat ./logs/chromedriver.log; fi
